/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package User_Portal;
import java.awt.Color;
import java.sql.*;
import javax.swing.JOptionPane;
import java.util.Date;
import java.awt.Font;
import java.io.File;
import java.security.NoSuchAlgorithmException;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import online_recruitment_system.Hashing;
/**
 *
 * @author asus
 */
public class Register_Fresher extends javax.swing.JFrame {
String email,pass,fname;
    /**
     * Creates new form Register_Fresher
     */
    public Register_Fresher() {
        initComponents();
        e_info.setEnabled(false);
        p_info.setEnabled(false);
        p_info.setVisible(false);
        e_info.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ac_info = new javax.swing.JPanel();
        emailid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        confeemailid = new javax.swing.JTextField();
        passwrd = new javax.swing.JPasswordField();
        confpasswrd = new javax.swing.JPasswordField();
        passver = new javax.swing.JLabel();
        emailver = new javax.swing.JLabel();
        passStrength = new javax.swing.JLabel();
        next1 = new javax.swing.JButton();
        p_info = new javax.swing.JPanel();
        fullname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        next2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        citycountry = new javax.swing.JTextField();
        mobile = new javax.swing.JTextField();
        gender = new javax.swing.JComboBox<>();
        dob = new com.toedter.calendar.JDateChooser();
        mobver = new javax.swing.JLabel();
        e_info = new javax.swing.JPanel();
        qualify = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        reg = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        skills = new javax.swing.JTextArea();
        gradYear = new com.toedter.calendar.JYearChooser();
        file_path = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        up_resume = new javax.swing.JButton();
        back = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ac_info.setBackground(new java.awt.Color(255, 255, 255));
        ac_info.setOpaque(false);
        ac_info.setLayout(null);

        emailid.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        emailid.setForeground(new java.awt.Color(255, 255, 255));
        emailid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 153, 153)));
        emailid.setOpaque(false);
        emailid.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                emailidCaretUpdate(evt);
            }
        });
        ac_info.add(emailid);
        emailid.setBounds(60, 100, 210, 20);

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        jLabel3.setText("ACCOUNT INFORMATION");
        ac_info.add(jLabel3);
        jLabel3.setBounds(62, 31, 202, 31);

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 255, 255));
        jLabel4.setText("E-MAIL ID");
        ac_info.add(jLabel4);
        jLabel4.setBounds(62, 77, 70, 18);

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 255, 255));
        jLabel5.setText("retype E-MIAL ID");
        ac_info.add(jLabel5);
        jLabel5.setBounds(60, 130, 120, 18);

        jLabel6.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 255, 255));
        jLabel6.setText("PASSWORD");
        ac_info.add(jLabel6);
        jLabel6.setBounds(60, 200, 90, 18);

        jLabel7.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 255, 255));
        jLabel7.setText("retype PASSWORD");
        ac_info.add(jLabel7);
        jLabel7.setBounds(60, 260, 130, 18);

        confeemailid.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        confeemailid.setForeground(new java.awt.Color(255, 255, 255));
        confeemailid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 153, 153)));
        confeemailid.setOpaque(false);
        confeemailid.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                confeemailidCaretUpdate(evt);
            }
        });
        ac_info.add(confeemailid);
        confeemailid.setBounds(60, 150, 210, 20);

        passwrd.setForeground(new java.awt.Color(255, 255, 255));
        passwrd.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 153, 153)));
        passwrd.setOpaque(false);
        passwrd.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                passwrdCaretUpdate(evt);
            }
        });
        ac_info.add(passwrd);
        passwrd.setBounds(60, 220, 210, 20);

        confpasswrd.setForeground(new java.awt.Color(255, 255, 255));
        confpasswrd.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 153, 153)));
        confpasswrd.setOpaque(false);
        confpasswrd.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                confpasswrdCaretUpdate(evt);
            }
        });
        ac_info.add(confpasswrd);
        confpasswrd.setBounds(60, 280, 210, 20);

        passver.setForeground(new java.awt.Color(153, 0, 51));
        passver.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ac_info.add(passver);
        passver.setBounds(60, 300, 210, 15);

        emailver.setForeground(new java.awt.Color(153, 0, 51));
        emailver.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ac_info.add(emailver);
        emailver.setBounds(60, 170, 210, 15);

        passStrength.setForeground(new java.awt.Color(153, 0, 51));
        passStrength.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ac_info.add(passStrength);
        passStrength.setBounds(60, 240, 210, 15);

        next1.setBackground(new java.awt.Color(0, 0, 102));
        next1.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        next1.setForeground(new java.awt.Color(255, 255, 255));
        next1.setText("NEXT");
        next1.setToolTipText("Enter Further Details...");
        next1.setContentAreaFilled(false);
        next1.setOpaque(true);
        next1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next1ActionPerformed(evt);
            }
        });
        ac_info.add(next1);
        next1.setBounds(110, 430, 90, 30);

        getContentPane().add(ac_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 310, 480));

        p_info.setBackground(new java.awt.Color(255, 255, 255));
        p_info.setOpaque(false);
        p_info.setLayout(null);

        fullname.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        fullname.setForeground(new java.awt.Color(255, 255, 255));
        fullname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 153, 153)));
        fullname.setOpaque(false);
        p_info.add(fullname);
        fullname.setBounds(60, 90, 210, 20);

        jLabel8.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        jLabel8.setText("PERSONAL INFORMATION");
        p_info.add(jLabel8);
        jLabel8.setBounds(62, 31, 220, 31);

        jLabel10.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 255, 255));
        jLabel10.setText("FULL NAME");
        p_info.add(jLabel10);
        jLabel10.setBounds(60, 70, 80, 18);

        jLabel11.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 255, 255));
        jLabel11.setText("D.O.B");
        p_info.add(jLabel11);
        jLabel11.setBounds(60, 120, 40, 18);

        jLabel12.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 255, 255));
        jLabel12.setText("MOBILE NO.");
        p_info.add(jLabel12);
        jLabel12.setBounds(60, 180, 90, 18);

        jLabel13.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(153, 255, 255));
        jLabel13.setText("GENDER");
        p_info.add(jLabel13);
        jLabel13.setBounds(60, 250, 70, 18);

        next2.setBackground(new java.awt.Color(0, 0, 102));
        next2.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        next2.setForeground(new java.awt.Color(255, 255, 255));
        next2.setText("NEXT");
        next2.setToolTipText("Enter Further Details...");
        next2.setContentAreaFilled(false);
        next2.setOpaque(true);
        next2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next2ActionPerformed(evt);
            }
        });
        p_info.add(next2);
        next2.setBounds(130, 430, 90, 30);

        jLabel14.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(153, 255, 255));
        jLabel14.setText("CITY, COUNTRY");
        p_info.add(jLabel14);
        jLabel14.setBounds(60, 280, 100, 18);

        citycountry.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        citycountry.setForeground(new java.awt.Color(255, 255, 255));
        citycountry.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 153, 153)));
        citycountry.setOpaque(false);
        p_info.add(citycountry);
        citycountry.setBounds(60, 300, 210, 20);

        mobile.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        mobile.setForeground(new java.awt.Color(255, 255, 255));
        mobile.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 153, 153)));
        mobile.setOpaque(false);
        mobile.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                mobileCaretUpdate(evt);
            }
        });
        p_info.add(mobile);
        mobile.setBounds(60, 200, 210, 20);

        gender.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        gender.setForeground(new java.awt.Color(0, 0, 102));
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        gender.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        gender.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        p_info.add(gender);
        gender.setBounds(130, 250, 90, 20);

        dob.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 153, 153)));
        dob.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        dob.setOpaque(false);
        p_info.add(dob);
        dob.setBounds(60, 140, 210, 30);

        mobver.setForeground(new java.awt.Color(255, 0, 0));
        mobver.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        p_info.add(mobver);
        mobver.setBounds(61, 220, 210, 15);

        getContentPane().add(p_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 200, 320, 490));

        e_info.setBackground(new java.awt.Color(255, 255, 255));
        e_info.setOpaque(false);
        e_info.setLayout(null);

        qualify.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        qualify.setForeground(new java.awt.Color(255, 255, 255));
        qualify.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(255, 153, 153)));
        qualify.setOpaque(false);
        e_info.add(qualify);
        qualify.setBounds(60, 170, 210, 20);

        jLabel16.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("EDUCATIONAL INFORMATION");
        e_info.add(jLabel16);
        jLabel16.setBounds(2, 31, 330, 31);

        jLabel17.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(153, 255, 255));
        jLabel17.setText("GRADUATION YEAR");
        e_info.add(jLabel17);
        jLabel17.setBounds(60, 90, 130, 18);

        jLabel18.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(153, 255, 255));
        jLabel18.setText("HIGHEST QUALIFICATION");
        e_info.add(jLabel18);
        jLabel18.setBounds(60, 150, 170, 18);

        jLabel19.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(153, 255, 255));
        jLabel19.setText("SKILLS");
        e_info.add(jLabel19);
        jLabel19.setBounds(60, 210, 90, 18);

        reg.setBackground(new java.awt.Color(0, 0, 102));
        reg.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        reg.setForeground(new java.awt.Color(255, 255, 255));
        reg.setText("REGISTER");
        reg.setToolTipText("See Review..");
        reg.setContentAreaFilled(false);
        reg.setOpaque(true);
        reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regActionPerformed(evt);
            }
        });
        e_info.add(reg);
        reg.setBounds(110, 530, 120, 30);

        skills.setColumns(20);
        skills.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        skills.setLineWrap(true);
        skills.setRows(5);
        skills.setWrapStyleWord(true);
        skills.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 153, 153)));
        skills.setOpaque(false);
        jScrollPane1.setViewportView(skills);

        e_info.add(jScrollPane1);
        jScrollPane1.setBounds(60, 230, 210, 94);

        gradYear.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 153, 153)));
        gradYear.setOpaque(false);
        e_info.add(gradYear);
        gradYear.setBounds(60, 110, 210, 25);

        file_path.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        file_path.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 153, 153)));
        file_path.setEnabled(false);
        file_path.setOpaque(false);
        e_info.add(file_path);
        file_path.setBounds(50, 400, 250, 21);

        jLabel20.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(2, 51, 102));
        jLabel20.setText("Resume Path");
        e_info.add(jLabel20);
        jLabel20.setBounds(70, 370, 85, 18);

        up_resume.setBackground(new java.awt.Color(0, 0, 102));
        up_resume.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        up_resume.setForeground(new java.awt.Color(255, 255, 255));
        up_resume.setText("Upload Resume");
        up_resume.setToolTipText("Enter Further Details...");
        up_resume.setContentAreaFilled(false);
        up_resume.setOpaque(true);
        up_resume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                up_resumeActionPerformed(evt);
            }
        });
        e_info.add(up_resume);
        up_resume.setBounds(100, 450, 133, 27);

        getContentPane().add(e_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 200, 320, 580));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_new/back_127px.png"))); // NOI18N
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 710, 110, 90));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Backgrounds/fresher_reg_back.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 800));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void emailidCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_emailidCaretUpdate
        String email1 = emailid.getText();
        String remail = confeemailid.getText();

        if(email1.length()>0){
            if (email1.equals(remail)) {
                emailver.setForeground(Color.green);
                emailver.setText("EMail-Id Match..");
            }
            else {
                emailver.setForeground(Color.red);
                emailver.setText("EMail-Id Not Match..");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_emailidCaretUpdate

    private void confeemailidCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_confeemailidCaretUpdate
        String email11 = emailid.getText();
        String remail = confeemailid.getText();

        if(remail.length()>0){
            if (email11.equals(remail)) {
                emailver.setForeground(Color.green);
                emailver.setText("EMail-Id Match..");
            }
            else {
                emailver.setForeground(Color.red);
                emailver.setText("EMail-Id Not Match..");
            }
        }
    }//GEN-LAST:event_confeemailidCaretUpdate

    private void passwrdCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_passwrdCaretUpdate
        String pass = passwrd.getText();
        String confpass = confpasswrd.getText();
        if(pass.length()>0){
            if (pass.equals(confpass)) {
                passver.setForeground(Color.green);
                passver.setText("Password Match..");
            }
            else {
                passver.setForeground(Color.red);
                passver.setText("Password Not Match..");
            }
        }

        char [] alphaU = new char[]{'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'Z', 'Y', 'X', 'W', 'V', 'U', 'T', 'S', 'R', 'Q', 'P', 'O', 'N'};
        char [] alphaL = new char[]{'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'z', 'y', 'x', 'w', 'v', 'u', 't', 's', 'r', 'q', 'p', 'o', 'n'};
        char [] digit = new char[]{'1','2','3','4','5','6','7','8','9','0'};
        char [] special = new char[]{'!','@','#','$','%','^','&','*','(',')','-','+','=',' ','/','.',',','?','_'};
        int l = pass.length();

        boolean a = true;
        boolean b = true;
        boolean c = true;
        boolean d = true;
        int count = 0;
        if(l>=8){
            count ++;
        }
        for( int i = 0 ; i<l ; i++){
            for (int j = 0 ; j<26 ; j++){
                if ((pass.charAt(i) == alphaU[j]) && (a == true)){
                    count += 1;
                    a = false;
                }
                else if ((pass.charAt(i) == alphaL[j]) && (b == true)){
                    count += 1;
                    b = false;
                }
            }
            for (int k = 0 ; k<10 ; k++){
                if ((pass.charAt(i) == digit[k]) && (c == true)){
                    count += 1;
                    c = false;
                }
            }
            for (int m = 0 ; m<19 ; m++){
                if ((pass.charAt(i) == special[m]) && (d == true)){
                    count += 1;
                    d = false;
                }
            }
        }
        if (count == 3 || count == 4){
            passStrength.setForeground(Color.blue);
            passStrength.setText("Moderate Password");
        }else if (count == 5){
            passStrength.setForeground(Color.green);
            passStrength.setText("Strong Password");
        }else{
            passStrength.setForeground(Color.red);
            passStrength.setText("Weak Password");
        }

    }//GEN-LAST:event_passwrdCaretUpdate

    private void confpasswrdCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_confpasswrdCaretUpdate
        String pass11 = passwrd.getText();
        String confpass = confpasswrd.getText();
        if(confpass.length()>0){
            if (pass11.equals(confpass)) {
                passver.setForeground(Color.green);
                passver.setText("Password Match..");
            }
            else {
                passver.setForeground(Color.red);
                passver.setText("Password Not Match..");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_confpasswrdCaretUpdate

    private void next1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next1ActionPerformed
        email = emailid.getText();
        String cemail = confeemailid.getText();
        pass = passwrd.getText();
        String cpass = confpasswrd.getText();

        if (email.isEmpty() || cemail.isEmpty() || pass.isEmpty() || cpass.isEmpty()){
            JOptionPane.showMessageDialog(this,"Details are not complete..\nFields cannot be Empty..");
        }else if(pass.equals(cpass) && email.equals(cemail)){
            try{
                Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                String sql1 = "select EMAIL_ID from SHREY.USER_LOGIN where EMAIL_ID = '"+email+"'";
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql1);
                if(rs.next()){
                    JOptionPane.showMessageDialog(this,"E-Mail already taken..\n");
                }else{
                    fullname.setEnabled(true);
                    dob.setEnabled(true);
                    mobile.setEnabled(true);
                    gender.setEnabled(true);
                    citycountry.setEnabled(true);
                    stmt.close();
                    con.close();
                    ac_info.setEnabled(false);
                    p_info.setEnabled(true); 
                    p_info.setVisible(true);
                }
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog (null,ex.getMessage());
            }
        }
        else{
            JOptionPane.showMessageDialog(this,"Password or EMAIL-ID do not Match..");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_next1ActionPerformed

    private void next2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next2ActionPerformed
        try {
            fname = fullname.getText();
            String mobno = mobile.getText();
            String city = citycountry.getText();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(dob.getDate());

            if (!fname.isEmpty() && !mobno.isEmpty() && !city.isEmpty()) {
                if (!mobver.getText().equals("Valid MobileNo..")) {
                    JOptionPane.showMessageDialog(this, "MobileNo, should be of 10 Digits..");

                } else {
                    p_info.setEnabled(false);
                    e_info.setEnabled(true);
                    gradYear.setEnabled(true);
                    skills.setEnabled(true);
                    qualify.setEnabled(true);
                    e_info.setVisible(true);

                }
            } else {
                JOptionPane.showMessageDialog(this, "Details are not complete..\nFields cannot be Empty..");
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Details are not complete..\nFields cannot be Empty..");
        }
    }//GEN-LAST:event_next2ActionPerformed

    private void mobileCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_mobileCaretUpdate
        char [] num = new char []{'1','2','3','4','5','6','7','8','9','0'};
        String mobno = mobile.getText();
        int l = mobno.length();
        int count = 0;
        for (int i = 0 ; i<l ; i++){
            for (int j = 0 ; j<10 ; j++){
                if(mobno.charAt(i) == num[j]){
                    count += 1;
                    break;
                }
            }
        }
        if (l==10 && count == 10){
            mobver.setForeground(Color.green);
            mobver.setText("Valid MobileNo..");
        }
        else{
            mobver.setForeground(Color.red);
            mobver.setText("In-Valid MobileNo..");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_mobileCaretUpdate

    private void regActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regActionPerformed
    try{
            String stat = "Fresher";
            email = emailid.getText();
            fname = fullname.getText();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");// TODO add your handling code here:
            String date1 = sdf.format(dob.getDate());
            int year_dob = dob.getDate().getYear()+1900;

            String Mobileno1 = mobile.getText();
            String gender11 = gender.getSelectedItem().toString();
            String citycount1 = citycountry.getText();
            String gradYear1 = Integer.toString(gradYear.getYear());
            String highqualify1 = qualify.getText();
            String skill1 = skills.getText();
            String filep = file_path.getText();
            
            
           pass=Hashing.hashPassword(pass);

            if(!fname.isEmpty() && !Mobileno1.isEmpty() && !citycount1.isEmpty() && !highqualify1.isEmpty() && !skill1.isEmpty() && !gradYear1.isEmpty()){
                if((gradYear.getYear() - year_dob) <=15 ){
                    JOptionPane.showMessageDialog(this,"Error : \n" + "  DOB = "+date1+", \n  Graduation Year = "+gradYear1 + " \nHow ?");
                }else if(!mobver.getText().equals("Valid MobileNo..")){
                    JOptionPane.showMessageDialog(this,"MobileNo, should be of 10 Digits..");
                }else{
                    int experience = 0;

                    PreparedStatement stmt;
                    int gradYear2 = Integer.parseInt(gradYear1);
                    try{
                        Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                        String sql = "insert into SHREY.USER_INFO "
                        + "(STATUS,EMAIL_ID,FULL_NAME,D_O_B,MOBILE_NO,GENDER,CITY_COUNTRY,GRADUATION_YEAR,HIGHER_QUALIFICATION,SKILLS,EXPERIENCE,RESUME) "
                        + "values(?,?,?,?,?,?,?,?,?,?,?,?)";
                        String sql1 = "insert into SHREY.USER_LOGIN(EMAIL_ID,PASSWORD) values('"+email+"','"+pass+"')";
                        Statement stmt1 = con.createStatement();
                        stmt = con.prepareStatement(sql);
                        stmt.setString(1, stat);
                        stmt.setString(2, email);
                        stmt.setString(3,fname);
                        stmt.setString(4, date1);
                        stmt.setString(5, Mobileno1);
                        stmt.setString(6,gender11);
                        stmt.setString(7, citycount1);
                        stmt.setInt(8, gradYear2);
                        stmt.setString(9, highqualify1);
                        stmt.setString(10, skill1);
                        stmt.setInt(11, experience);
                        stmt.setString(12,filep);

                        stmt.executeUpdate();
                        stmt1.executeUpdate(sql1);
                        JOptionPane.showMessageDialog(this,"You are REGISTERED Successfully..!");
                        stmt.close();
                        stmt1.close();
                        con.close();
                        dispose();
                        new USER_PORTAL(fname,email).setVisible(true);
                    }
                    catch(SQLException ex){
                        JOptionPane.showMessageDialog (null,ex.getMessage());
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this,"Details are not complete..\nFields cannot be Empty..");
            }
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(this,"Details are not complete..\nFields cannot be Empty..");
        } catch (NoSuchAlgorithmException ex) {
         System.out.println(ex.getMessage());
    }
    }//GEN-LAST:event_regActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        gradYear.setEnabled(false);
        skills.setEnabled(false);
        qualify.setEnabled(false);
        fullname.setEnabled(false);
        dob.setEnabled(false);
        mobile.setEnabled(false);
        gender.setEnabled(false);
        citycountry.setEnabled(false);
        
        Date pre = new Date();
        String year = Integer.toString(pre.getYear()+1900-18);
        String month = Integer.toString(pre.getMonth()+1);
        String dat = Integer.toString(pre.getDate());
        String maxdate = year+"-"+month+"-"+dat;
        try {
            Date datemax = new SimpleDateFormat("yyyy-MM-dd").parse(maxdate);
            dob.setMaxSelectableDate(datemax);
        } catch (ParseException ex) {
            System.out.print(ex.getMessage());
        } 
        Date d = new Date();
        int pyear = d.getYear()+1900;
        gradYear.setEndYear(pyear);
        gradYear.setStartYear(pyear-10);
        gradYear.setFont(new Font("Roboto Bk", Font.BOLD, 14));
    }//GEN-LAST:event_formWindowOpened

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        dispose();
        new Register_0().setVisible(true);
    }//GEN-LAST:event_backMouseClicked

    private void up_resumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_up_resumeActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filepath = f.getAbsolutePath();
        file_path.setText(filepath);
    }//GEN-LAST:event_up_resumeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register_Fresher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register_Fresher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register_Fresher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register_Fresher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register_Fresher().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ac_info;
    private javax.swing.JLabel back;
    private javax.swing.JLabel background;
    private javax.swing.JTextField citycountry;
    private javax.swing.JTextField confeemailid;
    private javax.swing.JPasswordField confpasswrd;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JPanel e_info;
    private javax.swing.JTextField emailid;
    private javax.swing.JLabel emailver;
    private javax.swing.JTextField file_path;
    private javax.swing.JTextField fullname;
    private javax.swing.JComboBox<String> gender;
    private com.toedter.calendar.JYearChooser gradYear;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mobile;
    private javax.swing.JLabel mobver;
    private javax.swing.JButton next1;
    private javax.swing.JButton next2;
    private javax.swing.JPanel p_info;
    private javax.swing.JLabel passStrength;
    private javax.swing.JLabel passver;
    private javax.swing.JPasswordField passwrd;
    private javax.swing.JTextField qualify;
    private javax.swing.JButton reg;
    private javax.swing.JTextArea skills;
    private javax.swing.JButton up_resume;
    // End of variables declaration//GEN-END:variables
}
