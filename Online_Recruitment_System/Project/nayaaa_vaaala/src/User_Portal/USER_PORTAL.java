package User_Portal;


import User_Portal.Login_Page;
import java.awt.Color;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import keeptoo.KGradientPanel;
import online_recruitment_system.*;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.io.File;
import java.security.NoSuchAlgorithmException;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author asus
 */
public class USER_PORTAL extends javax.swing.JFrame {
    SP_focus sp=new SP_focus();
    User_Tformat ut=new User_Tformat();
    JavaMailUtil send_mail=new JavaMailUtil();
    
    Color Gstart=new Color(245,245,251);
    Color Gend=new Color(232,232,232);
    String name,email="user@gm.com";
    
    String new_resume_path;
    /**
     * Creates new form NewJFrame
     */
    public USER_PORTAL() {
        initComponents();
        
        showdate();
        showtime();
        
        KGradientPanel[] k= {sp2_highlight,sp3_highlight,sp4_highlight};
        sp.setFocus(sp1_highlight, k);
        
        ut.format(JOBS_AVAIL);
        ut.format(AP_jOBS_TABLE);
            
            
    }
     public USER_PORTAL(String name, String email){
        initComponents();
        
        showdate();
        showtime();
        
        KGradientPanel[] k= {sp2_highlight,sp3_highlight,sp4_highlight};
        sp.setFocus(sp1_highlight, k);
        
        
        this.name = name;
        this.email = email;
        userLabel.setText(name);
        
        ut.format(JOBS_AVAIL);
        ut.format(AP_jOBS_TABLE);
        
         
    }
     
     private void showdate(){
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        dateset.setText(sdf.format(d));
    }
    
    private void showtime(){
        new Timer(0, (ActionEvent e) -> {
            Date s = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss a");
            timeset.setText(sdf.format(s));
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        side_pane = new javax.swing.JPanel();
        sp1_home = new javax.swing.JLabel();
        sp3_myprofile = new javax.swing.JLabel();
        sp2_apjobs = new javax.swing.JLabel();
        sp4_cpass = new javax.swing.JLabel();
        sp1_highlight = new keeptoo.KGradientPanel();
        sp2_highlight = new keeptoo.KGradientPanel();
        sp3_highlight = new keeptoo.KGradientPanel();
        sp4_highlight = new keeptoo.KGradientPanel();
        frame_container = new javax.swing.JPanel();
        home = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel11 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        JOBS_AVAIL = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        filterv = new javax.swing.JTextField();
        jobtitleradio = new javax.swing.JRadioButton();
        skillsradio = new javax.swing.JRadioButton();
        compnameradio = new javax.swing.JRadioButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        aplly_job = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jobid = new javax.swing.JTextField();
        jobtitle = new javax.swing.JTextField();
        compname = new javax.swing.JTextField();
        exp = new javax.swing.JTextField();
        vacancy = new javax.swing.JTextField();
        highqualify = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        skillsreq = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        dateset = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        timeset = new javax.swing.JLabel();
        appliedJobs = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        AP_jOBS_TABLE = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        filterv1 = new javax.swing.JTextField();
        applieddateradio = new javax.swing.JRadioButton();
        appnoradio = new javax.swing.JRadioButton();
        statradio = new javax.swing.JRadioButton();
        jButton8 = new javax.swing.JButton();
        jobtitle1radio = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jobid1 = new javax.swing.JTextField();
        jobtitle1 = new javax.swing.JTextField();
        compname1 = new javax.swing.JTextField();
        exp1 = new javax.swing.JTextField();
        applieddate = new javax.swing.JTextField();
        highqualify1 = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        skillsreq1 = new javax.swing.JTextArea();
        jLabel68 = new javax.swing.JLabel();
        appno = new javax.swing.JTextField();
        jLabel69 = new javax.swing.JLabel();
        status1 = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        message = new javax.swing.JTextArea();
        jLabel70 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        profile = new javax.swing.JPanel();
        other_inf = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        skills = new javax.swing.JTextArea();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        industry = new javax.swing.JTextField();
        expYear = new javax.swing.JSpinner();
        gradY = new com.toedter.calendar.JYearChooser();
        qualify = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        expMonth = new javax.swing.JSpinner();
        show_resume = new keeptoo.KButton();
        edit_resume = new keeptoo.KButton();
        per_inf = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        gender = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        citycount = new javax.swing.JTextField();
        mobver = new javax.swing.JLabel();
        emailid = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        dob = new com.toedter.calendar.JDateChooser();
        fullname = new javax.swing.JTextField();
        status = new javax.swing.JTextField();
        mobileno = new javax.swing.JTextField();
        head = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        profilebackground = new javax.swing.JLabel();
        changePass = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jSeparator1 = new javax.swing.JSeparator();
        passStrength = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        passver = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        oldpasswrd = new javax.swing.JPasswordField();
        confnewpasswrd = new javax.swing.JPasswordField();
        newpasswrd = new javax.swing.JPasswordField();
        RESET = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        dashboardlabel = new javax.swing.JLabel();
        logOutLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("Roboto Bk", 0, 12)); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        side_pane.setBackground(new java.awt.Color(255, 255, 255));
        side_pane.setOpaque(false);
        side_pane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sp1_home.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        sp1_home.setForeground(new java.awt.Color(228, 238, 240));
        sp1_home.setText("HOME");
        sp1_home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sp1_homeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                paneCommonEvent(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                paneCommomExitEvent(evt);
            }
        });
        side_pane.add(sp1_home, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 158, 50));

        sp3_myprofile.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        sp3_myprofile.setForeground(new java.awt.Color(228, 238, 240));
        sp3_myprofile.setText("MY PROFILE");
        sp3_myprofile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sp3_myprofileMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                paneCommonEvent(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                paneCommomExitEvent(evt);
            }
        });
        side_pane.add(sp3_myprofile, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 158, 50));

        sp2_apjobs.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        sp2_apjobs.setForeground(new java.awt.Color(228, 238, 240));
        sp2_apjobs.setText("APPLIED JOBS");
        sp2_apjobs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sp2_apjobsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                paneCommonEvent(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                paneCommomExitEvent(evt);
            }
        });
        side_pane.add(sp2_apjobs, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 158, 50));

        sp4_cpass.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        sp4_cpass.setForeground(new java.awt.Color(228, 238, 240));
        sp4_cpass.setText("CHANGE PASSWORD");
        sp4_cpass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sp4_cpassMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                paneCommonEvent(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                paneCommomExitEvent(evt);
            }
        });
        side_pane.add(sp4_cpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 158, 50));

        sp1_highlight.setkBorderRadius(20);
        sp1_highlight.setkEndColor(new java.awt.Color(77, 108, 155));
        sp1_highlight.setkStartColor(new java.awt.Color(36, 206, 243));
        sp1_highlight.setName(""); // NOI18N
        sp1_highlight.setOpaque(false);

        javax.swing.GroupLayout sp1_highlightLayout = new javax.swing.GroupLayout(sp1_highlight);
        sp1_highlight.setLayout(sp1_highlightLayout);
        sp1_highlightLayout.setHorizontalGroup(
            sp1_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        sp1_highlightLayout.setVerticalGroup(
            sp1_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        side_pane.add(sp1_highlight, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 14, 50));

        sp2_highlight.setkBorderRadius(20);
        sp2_highlight.setkEndColor(new java.awt.Color(77, 108, 155));
        sp2_highlight.setkStartColor(new java.awt.Color(36, 206, 243));
        sp2_highlight.setName(""); // NOI18N
        sp2_highlight.setOpaque(false);

        javax.swing.GroupLayout sp2_highlightLayout = new javax.swing.GroupLayout(sp2_highlight);
        sp2_highlight.setLayout(sp2_highlightLayout);
        sp2_highlightLayout.setHorizontalGroup(
            sp2_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        sp2_highlightLayout.setVerticalGroup(
            sp2_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        side_pane.add(sp2_highlight, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 14, 50));

        sp3_highlight.setkBorderRadius(20);
        sp3_highlight.setkEndColor(new java.awt.Color(77, 108, 155));
        sp3_highlight.setkStartColor(new java.awt.Color(36, 206, 243));
        sp3_highlight.setName(""); // NOI18N
        sp3_highlight.setOpaque(false);

        javax.swing.GroupLayout sp3_highlightLayout = new javax.swing.GroupLayout(sp3_highlight);
        sp3_highlight.setLayout(sp3_highlightLayout);
        sp3_highlightLayout.setHorizontalGroup(
            sp3_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        sp3_highlightLayout.setVerticalGroup(
            sp3_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        side_pane.add(sp3_highlight, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 209, 14, 50));

        sp4_highlight.setkBorderRadius(20);
        sp4_highlight.setkEndColor(new java.awt.Color(77, 108, 155));
        sp4_highlight.setkStartColor(new java.awt.Color(36, 206, 243));
        sp4_highlight.setName(""); // NOI18N
        sp4_highlight.setOpaque(false);

        javax.swing.GroupLayout sp4_highlightLayout = new javax.swing.GroupLayout(sp4_highlight);
        sp4_highlight.setLayout(sp4_highlightLayout);
        sp4_highlightLayout.setHorizontalGroup(
            sp4_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );
        sp4_highlightLayout.setVerticalGroup(
            sp4_highlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        side_pane.add(sp4_highlight, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 14, 50));

        getContentPane().add(side_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 210, 460));

        frame_container.setFont(frame_container.getFont());
        frame_container.setOpaque(false);
        frame_container.setLayout(new java.awt.CardLayout());

        home.setOpaque(false);
        home.setPreferredSize(new java.awt.Dimension(844, 500));
        home.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane4.setBorder(null);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("TABLE OF ALL THE JOBS AVAILABLE..");

        jScrollPane3.setBorder(null);

        JOBS_AVAIL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "JOB TITLE", "COMPANY NAME", "SKILLS REQUIRED"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JOBS_AVAIL.setOpaque(false);
        JOBS_AVAIL.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JOBS_AVAIL.setShowGrid(false);
        JOBS_AVAIL.setShowHorizontalLines(true);
        JOBS_AVAIL.getTableHeader().setReorderingAllowed(false);
        JOBS_AVAIL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JOBS_AVAILMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(JOBS_AVAIL);

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(188, 250, 252)));

        jLabel44.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("FilterBy Value");

        filterv.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        filterv.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        filterv.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        jobtitleradio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jobtitleradio);
        jobtitleradio.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jobtitleradio.setText("JOB TITLE");

        skillsradio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(skillsradio);
        skillsradio.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        skillsradio.setText("SKILLS REQUIRED");

        compnameradio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(compnameradio);
        compnameradio.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        compnameradio.setText("COMPANY NAME");

        jButton3.setBackground(new java.awt.Color(0, 204, 204));
        jButton3.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("FILTER");
        jButton3.setContentAreaFilled(false);
        jButton3.setOpaque(true);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton3HOMEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton3HOMEMouseExited(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobtitleradio)
                    .addComponent(compnameradio)
                    .addComponent(skillsradio, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filterv, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel44)
                .addGap(23, 23, 23)
                .addComponent(filterv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jobtitleradio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(skillsradio)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(compnameradio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton5.setBackground(new java.awt.Color(0, 204, 204));
        jButton5.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("SHOW ALL JOBS");
        jButton5.setContentAreaFilled(false);
        jButton5.setOpaque(true);
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5HOMEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5HOMEMouseExited(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 204, 204));
        jButton6.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("CLEAR TABLE");
        jButton6.setContentAreaFilled(false);
        jButton6.setOpaque(true);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton6HOMEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton6HOMEMouseExited(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        aplly_job.setBackground(new java.awt.Color(0, 204, 204));
        aplly_job.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        aplly_job.setForeground(new java.awt.Color(255, 255, 255));
        aplly_job.setText("APPLY FOR JOB");
        aplly_job.setContentAreaFilled(false);
        aplly_job.setOpaque(true);
        aplly_job.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                aplly_jobHOMEMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                aplly_jobHOMEMouseExited(evt);
            }
        });
        aplly_job.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplly_jobActionPerformed(evt);
            }
        });

        jPanel13.setBackground(new java.awt.Color(89, 193, 241));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 3, 1, new java.awt.Color(153, 153, 153)), "JOB DETAILS / REQUIREMENTS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 102))); // NOI18N
        jPanel13.setPreferredSize(new java.awt.Dimension(400, 550));

        jLabel45.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel45.setText("JOB TITLE");

        jLabel46.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel46.setText("JOB ID");

        jLabel47.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel47.setText("COMPANY NAME");

        jLabel48.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel48.setText("SKILLS REQUIRED");

        jLabel49.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel49.setText("EXPERIENCE");

        jLabel50.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel50.setText("HIGHEST QUALIFICATION");

        jLabel51.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel51.setText("VACANCIES");

        jobid.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        jobid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jobid.setBorder(null);

        jobtitle.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        jobtitle.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jobtitle.setBorder(null);

        compname.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        compname.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        compname.setBorder(null);

        exp.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        exp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        exp.setBorder(null);

        vacancy.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        vacancy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        vacancy.setBorder(null);

        highqualify.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        highqualify.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        highqualify.setBorder(null);

        jScrollPane2.setBorder(null);

        skillsreq.setColumns(20);
        skillsreq.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        skillsreq.setLineWrap(true);
        skillsreq.setRows(5);
        skillsreq.setWrapStyleWord(true);
        skillsreq.setBorder(null);
        jScrollPane2.setViewportView(skillsreq);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47)
                    .addComponent(jLabel48)
                    .addComponent(jLabel49)
                    .addComponent(jLabel50)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(vacancy)
                    .addComponent(exp)
                    .addComponent(compname)
                    .addComponent(jobtitle)
                    .addComponent(jobid)
                    .addComponent(highqualify)
                    .addComponent(jScrollPane2))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jobid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jobtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel45))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(compname, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47))
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exp, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(highqualify, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51)
                    .addComponent(vacancy, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(151, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(287, 287, 287))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(aplly_job, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(372, 372, 372))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(aplly_job)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel11);

        home.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 94, 960, 596));

        jLabel4.setFont(new java.awt.Font("Roboto Bk", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(32, 180, 235));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Home");
        home.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 24, 950, 64));

        dateset.setFont(new java.awt.Font("Castellar", 1, 14)); // NOI18N
        dateset.setForeground(new java.awt.Color(0, 0, 102));
        dateset.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateset.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        home.add(dateset, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 20, 150, 20));

        jLabel19.setFont(new java.awt.Font("BankGothic Lt BT", 1, 14)); // NOI18N
        jLabel19.setText("DATE");
        home.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 20, -1, -1));

        jLabel18.setFont(new java.awt.Font("BankGothic Lt BT", 1, 14)); // NOI18N
        jLabel18.setText("TIME");
        home.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 50, -1, -1));

        timeset.setFont(new java.awt.Font("Castellar", 1, 14)); // NOI18N
        timeset.setForeground(new java.awt.Color(0, 0, 102));
        timeset.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeset.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(153, 153, 153)));
        home.add(timeset, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 50, 150, 20));

        frame_container.add(home, "card5");

        appliedJobs.setBackground(new java.awt.Color(255, 255, 255));
        appliedJobs.setFont(appliedJobs.getFont());
        appliedJobs.setOpaque(false);
        appliedJobs.setPreferredSize(new java.awt.Dimension(844, 500));
        appliedJobs.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane8.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane8.setBorder(null);
        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane5.setBorder(null);
        jScrollPane5.setOpaque(false);

        AP_jOBS_TABLE.setFont(new java.awt.Font("Futura Std Medium", 0, 11)); // NOI18N
        AP_jOBS_TABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "APPLICATION NO.", "JOB-TITLE", "COMPANY NAME", "APPLIED DATE", "STATUS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        AP_jOBS_TABLE.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        AP_jOBS_TABLE.setShowGrid(false);
        AP_jOBS_TABLE.setShowHorizontalLines(true);
        AP_jOBS_TABLE.getTableHeader().setReorderingAllowed(false);
        AP_jOBS_TABLE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AP_jOBS_TABLEMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(AP_jOBS_TABLE);

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 1, 3, 1, new java.awt.Color(153, 153, 153)));
        jPanel16.setOpaque(false);

        jLabel60.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel60.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel60.setText("FilterBy Value");

        filterv1.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        filterv1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        filterv1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        applieddateradio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(applieddateradio);
        applieddateradio.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        applieddateradio.setText("APPLIED DATE ");

        appnoradio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(appnoradio);
        appnoradio.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        appnoradio.setText("APPLICATION NUMBER");

        statradio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(statradio);
        statradio.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        statradio.setText("STATUS");

        jButton8.setBackground(new java.awt.Color(0, 204, 204));
        jButton8.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("FILTER");
        jButton8.setContentAreaFilled(false);
        jButton8.setOpaque(true);
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton8appjobsmouseenter(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton8appjobmouseexit(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jobtitle1radio.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(jobtitle1radio);
        jobtitle1radio.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jobtitle1radio.setText("JOB TITLE");

        jLabel17.setForeground(new java.awt.Color(255, 51, 51));
        jLabel17.setText("DATE shoub be in the format ( yyyy-MM-dd ) only..!");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jobtitle1radio)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statradio)
                            .addComponent(applieddateradio)
                            .addComponent(appnoradio, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel60)
                                .addGap(327, 327, 327))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(filterv1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80))))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jobtitle1radio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statradio)
                    .addComponent(jLabel60))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton8)
                            .addComponent(appnoradio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applieddateradio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                        .addComponent(filterv1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        jButton9.setBackground(new java.awt.Color(0, 204, 204));
        jButton9.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("SHOW ALL JOBS");
        jButton9.setContentAreaFilled(false);
        jButton9.setOpaque(true);
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton9appjobsmouseenter(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton9appjobmouseexit(evt);
            }
        });
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(0, 204, 204));
        jButton10.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("CLEAR TABLE");
        jButton10.setContentAreaFilled(false);
        jButton10.setOpaque(true);
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton10appjobsmouseenter(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton10appjobmouseexit(evt);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jPanel17.setBackground(new java.awt.Color(89, 193, 241));
        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 3, 1, new java.awt.Color(153, 153, 153)), "APPLIED JOB DETAILS / STATUS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 0, 102))); // NOI18N
        jPanel17.setPreferredSize(new java.awt.Dimension(400, 550));

        jLabel61.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel61.setText("JOB TITLE");

        jLabel62.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel62.setText("JOB ID");

        jLabel63.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel63.setText("COMPANY NAME");

        jLabel64.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel64.setText("SKILLS REQUIRED");

        jLabel65.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel65.setText("EXPERIENCE");

        jLabel66.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel66.setText("HIGHEST QUALIFICATION");

        jLabel67.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel67.setText("APPLIED DATE");

        jobid1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        jobid1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jobid1.setBorder(null);

        jobtitle1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        jobtitle1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jobtitle1.setBorder(null);

        compname1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        compname1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        compname1.setBorder(null);

        exp1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        exp1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        exp1.setBorder(null);

        applieddate.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        applieddate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        applieddate.setBorder(null);

        highqualify1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        highqualify1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        highqualify1.setBorder(null);

        jScrollPane6.setBorder(null);

        skillsreq1.setColumns(20);
        skillsreq1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        skillsreq1.setLineWrap(true);
        skillsreq1.setRows(5);
        skillsreq1.setWrapStyleWord(true);
        skillsreq1.setBorder(null);
        jScrollPane6.setViewportView(skillsreq1);

        jLabel68.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel68.setText("APPLICATION NUMBER");

        appno.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        appno.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        appno.setBorder(null);

        jLabel69.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel69.setText("STATUS");

        status1.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        status1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        status1.setBorder(null);

        jScrollPane7.setBorder(null);

        message.setColumns(20);
        message.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        message.setLineWrap(true);
        message.setRows(5);
        message.setWrapStyleWord(true);
        message.setBorder(null);
        jScrollPane7.setViewportView(message);

        jLabel70.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel70.setText("MESSAGE ");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel63)
                    .addComponent(jLabel64)
                    .addComponent(jLabel65)
                    .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel68)
                    .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel70)
                    .addComponent(jLabel66))
                .addGap(22, 22, 22)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(appno)
                    .addComponent(applieddate, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exp1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(compname1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobtitle1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jobid1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(highqualify1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addComponent(status1)
                    .addComponent(jScrollPane7))
                .addGap(18, 18, 18))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(appno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel68))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jobid1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel62))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jobtitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel61))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(compname1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel63))
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel64))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(exp1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel65))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(highqualify1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel66))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(applieddate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel67))
                .addGap(18, 18, 18)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(status1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel69))
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel70))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGap(0, 243, Short.MAX_VALUE)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(202, 202, 202))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(312, 312, 312))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 895, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addGap(18, 18, 18)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jScrollPane8.setViewportView(jPanel14);

        appliedJobs.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 960, 590));

        jLabel2.setFont(new java.awt.Font("Roboto Bk", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(32, 180, 235));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Applied Jobs");
        appliedJobs.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 21, 950, 74));

        frame_container.add(appliedJobs, "card4");

        profile.setBackground(new java.awt.Color(255, 255, 255));
        profile.setOpaque(false);
        profile.setPreferredSize(new java.awt.Dimension(844, 500));
        profile.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        other_inf.setOpaque(false);

        jLabel33.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel33.setText("Months");

        jLabel34.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel34.setText("INDUSTRY WORKED");

        jScrollPane1.setBorder(null);

        skills.setColumns(20);
        skills.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        skills.setLineWrap(true);
        skills.setRows(5);
        skills.setWrapStyleWord(true);
        skills.setAutoscrolls(false);
        skills.setBorder(null);
        jScrollPane1.setViewportView(skills);

        jLabel28.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel28.setText("GRADUATION YEAR");

        jLabel30.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel30.setText("SKILLS");

        jLabel29.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel29.setText("Highest Qualification");

        industry.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        industry.setBorder(null);
        industry.setEnabled(false);

        expYear.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        expYear.setModel(new javax.swing.SpinnerNumberModel(0, 0, 50, 1));
        expYear.setBorder(null);

        qualify.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        qualify.setBorder(null);

        jLabel31.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel31.setText("EXPERIENCE");

        jLabel32.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        jLabel32.setText("Years");

        expMonth.setFont(new java.awt.Font("Bahnschrift", 1, 14)); // NOI18N
        expMonth.setModel(new javax.swing.SpinnerNumberModel(0, 0, 12, 1));
        expMonth.setBorder(null);

        show_resume.setText("Show Resume");
        show_resume.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        show_resume.setkBorderRadius(20);
        show_resume.setkEndColor(new java.awt.Color(14, 140, 181));
        show_resume.setkHoverEndColor(new java.awt.Color(153, 255, 255));
        show_resume.setkHoverStartColor(new java.awt.Color(45, 192, 224));
        show_resume.setkStartColor(new java.awt.Color(9, 101, 160));
        show_resume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_resumeActionPerformed(evt);
            }
        });

        edit_resume.setText("Change Resume");
        edit_resume.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        edit_resume.setkBorderRadius(20);
        edit_resume.setkEndColor(new java.awt.Color(14, 140, 181));
        edit_resume.setkHoverEndColor(new java.awt.Color(153, 255, 255));
        edit_resume.setkHoverStartColor(new java.awt.Color(45, 192, 224));
        edit_resume.setkStartColor(new java.awt.Color(9, 101, 160));
        edit_resume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_resumeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout other_infLayout = new javax.swing.GroupLayout(other_inf);
        other_inf.setLayout(other_infLayout);
        other_infLayout.setHorizontalGroup(
            other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(other_infLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(other_infLayout.createSequentialGroup()
                        .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, other_infLayout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(other_infLayout.createSequentialGroup()
                                .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(qualify)
                                .addComponent(gradY, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(other_infLayout.createSequentialGroup()
                        .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(other_infLayout.createSequentialGroup()
                                .addComponent(expYear, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(expMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(industry, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, other_infLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(show_resume, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(edit_resume, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        other_infLayout.setVerticalGroup(
            other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(other_infLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(other_infLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel28))
                    .addComponent(gradY, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(qualify, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(other_infLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(other_infLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(expYear, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel32)
                        .addComponent(expMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel31))
                    .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(22, 22, 22)
                .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(industry, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(other_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(show_resume, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit_resume, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        profile.add(other_inf, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 180, -1, -1));

        per_inf.setOpaque(false);

        jLabel24.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel24.setText("D.O.B");

        jLabel25.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel25.setText("MOBILE NO.");

        jLabel23.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel23.setText("FULL NAME");

        gender.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        gender.setBorder(null);

        jLabel26.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel26.setText("GENDER");

        jLabel21.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel21.setText("E-MAIL ID");

        citycount.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        citycount.setBorder(null);

        mobver.setForeground(new java.awt.Color(255, 0, 51));
        mobver.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        emailid.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        emailid.setBorder(null);

        jLabel22.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel22.setText("STATUS");

        jLabel27.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        jLabel27.setText("CITY, COUNTRY");

        fullname.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        fullname.setBorder(null);

        status.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        status.setBorder(null);

        mobileno.setFont(new java.awt.Font("Bahnschrift", 0, 15)); // NOI18N
        mobileno.setBorder(null);
        mobileno.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                mobilenoCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout per_infLayout = new javax.swing.GroupLayout(per_inf);
        per_inf.setLayout(per_infLayout);
        per_infLayout.setHorizontalGroup(
            per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(per_infLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(citycount)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileno)
                    .addComponent(dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fullname)
                    .addComponent(emailid)
                    .addComponent(status)
                    .addComponent(mobver, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        per_infLayout.setVerticalGroup(
            per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(per_infLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emailid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addGroup(per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fullname, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(14, 14, 14)
                .addGroup(per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mobileno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mobver, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(per_infLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(citycount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        profile.add(per_inf, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, -1, -1));

        head.setFont(new java.awt.Font("Roboto Bk", 0, 36)); // NOI18N
        head.setForeground(new java.awt.Color(32, 180, 235));
        head.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        head.setText("Profile");
        profile.add(head, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 950, 90));

        jLabel5.setFont(new java.awt.Font("Roboto Bk", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(43, 104, 170));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Edit");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        profile.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 620, 150, 40));

        jLabel6.setFont(new java.awt.Font("Roboto Bk", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(43, 104, 170));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Update");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        profile.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 620, 150, 40));

        profilebackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Backgrounds/profile_bck_new.png"))); // NOI18N
        profile.add(profilebackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 950, 590));

        frame_container.add(profile, "card5");

        changePass.setBackground(new java.awt.Color(255, 255, 255));
        changePass.setOpaque(false);
        changePass.setPreferredSize(new java.awt.Dimension(844, 500));
        changePass.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setkBorderRadius(100);
        kGradientPanel1.setkEndColor(new java.awt.Color(204, 255, 255));
        kGradientPanel1.setkGradientFocus(400);
        kGradientPanel1.setkStartColor(new java.awt.Color(242, 242, 248));
        kGradientPanel1.setOpaque(false);

        jSeparator1.setBackground(new java.awt.Color(204, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator1.setOpaque(true);

        passStrength.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        passStrength.setForeground(new java.awt.Color(255, 0, 0));
        passStrength.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel39.setFont(new java.awt.Font("Roboto Bk", 0, 15)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(48, 132, 178));
        jLabel39.setText("CONFIRM NEW");

        jLabel36.setFont(new java.awt.Font("Roboto Bk", 0, 15)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(48, 132, 178));
        jLabel36.setText("NEW PASSWORD");

        passver.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        passver.setForeground(new java.awt.Color(255, 0, 0));
        passver.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel37.setFont(new java.awt.Font("Roboto Bk", 0, 15)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(48, 132, 178));
        jLabel37.setText("OLD PASSWORD");

        oldpasswrd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        oldpasswrd.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        oldpasswrd.setOpaque(false);
        oldpasswrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldpasswrdActionPerformed(evt);
            }
        });

        confnewpasswrd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        confnewpasswrd.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        confnewpasswrd.setOpaque(false);
        confnewpasswrd.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                confnewpasswrdCaretUpdate(evt);
            }
        });
        confnewpasswrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confnewpasswrdActionPerformed(evt);
            }
        });

        newpasswrd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        newpasswrd.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        newpasswrd.setOpaque(false);
        newpasswrd.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                newpasswrdCaretUpdate(evt);
            }
        });
        newpasswrd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newpasswrdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel36)
                                    .addComponent(jLabel39))
                                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                        .addGap(119, 119, 119)
                                        .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(passStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(newpasswrd)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(confnewpasswrd, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(passver, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(oldpasswrd, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)))
                .addGap(78, 78, 78))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(oldpasswrd, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(newpasswrd, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(confnewpasswrd, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passver, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        changePass.add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 611, 250));

        RESET.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_new/reset button.png"))); // NOI18N
        RESET.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RESETMouseClicked(evt);
            }
        });
        changePass.add(RESET, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 510, -1, 50));

        jLabel1.setFont(new java.awt.Font("Roboto Bk", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(32, 180, 235));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Change Password");
        changePass.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 694, 70));

        frame_container.add(changePass, "card5");

        getContentPane().add(frame_container, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, 960, 690));

        dashboardlabel.setFont(new java.awt.Font("Roboto Bk", 0, 18)); // NOI18N
        dashboardlabel.setForeground(new java.awt.Color(255, 255, 255));
        dashboardlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dashboardlabel.setText("DASHBOARD");
        getContentPane().add(dashboardlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 150, 40));

        logOutLabel.setFont(new java.awt.Font("Frutiger LT Std 57 Cn", 0, 18)); // NOI18N
        logOutLabel.setForeground(new java.awt.Color(42, 104, 178));
        logOutLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logOutLabel.setText("Log Out");
        logOutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutLabelMouseClicked(evt);
            }
        });
        getContentPane().add(logOutLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 730, 170, 50));

        userLabel.setFont(new java.awt.Font("Frutiger LT Std 57 Cn", 0, 18)); // NOI18N
        userLabel.setForeground(new java.awt.Color(42, 104, 178));
        userLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userLabel.setText("Login/Register");
        getContentPane().add(userLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 660, 140, 40));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Backgrounds/dashb8.png"))); // NOI18N
        background.setOpaque(true);
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 800));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sp1_homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sp1_homeMouseClicked
        KGradientPanel[] k= {sp2_highlight,sp3_highlight,sp4_highlight};
        sp.setFocus(sp1_highlight, k);
        
            home.setVisible(true);
            appliedJobs.setVisible(false);
            profile.setVisible(false);
            changePass.setVisible(false);
            
            filterv.setText("");
            jobid.setText("");
            jobtitle.setText("");
            compname.setText("");
            skillsreq.setText("");
            exp.setText("");
            vacancy.setText("");
            highqualify.setText("");
            buttonGroup1.clearSelection();
            jobid.setEditable(false);
            jobtitle.setEditable(false);
            compname.setEditable(false);
            skillsreq.setEditable(false);
            exp.setEditable(false);
            highqualify.setEditable(false);
            vacancy.setEditable(false);
            
            
            DefaultTableModel model = (DefaultTableModel)JOBS_AVAIL.getModel();
                int rows = model.getRowCount();
                if (rows >= 0){
                    for(int i = 0 ; i<rows ; i++){
                       model.removeRow(0);
                    } 
                    try{
                        Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                        String sql = "Select * from SHREY.JOBS,SHREY.COMPANIES where SHREY.JOBS.COMPANY_ID = SHREY.COMPANIES.COMPANY_ID AND SHREY.JOBS.VACANCIES != 0";
                        Statement stmt = con.createStatement();
                        ResultSet rs = stmt.executeQuery(sql);
                        while(rs.next()){
                            String jobi = rs.getString("JOB_TITLE");
                            String compn=rs.getString("COMPANY_NAME");
                            String skillsr = rs.getString("SKILLS");
                            model.addRow(new Object[]{jobi,compn,skillsr});
                        }
                        rs.close();
                        con.close();
                        stmt.close();
                    }
                    catch(SQLException e){
                        System.out.println(e.getMessage());
                    }
                }
        
    }//GEN-LAST:event_sp1_homeMouseClicked

    private void sp2_apjobsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sp2_apjobsMouseClicked
        KGradientPanel[] k= {sp1_highlight,sp3_highlight,sp4_highlight};
        sp.setFocus(sp2_highlight, k);
        
        
            home.setVisible(false);
            appliedJobs.setVisible(true);
            profile.setVisible(false);
            changePass.setVisible(false);
            
            filterv1.setText("");
            appno.setText("");
            jobid1.setText("");
            jobtitle1.setText("");
            compname1.setText("");
            skillsreq1.setText("");
            exp1.setText("");
            highqualify1.setText("");
            applieddate.setText("");
            message.setText("");
            status1.setText("");
            buttonGroup1.clearSelection();
            appno.setEditable(false);
            jobid1.setEditable(false);
            jobtitle1.setEditable(false);
            compname1.setEditable(false);
            skillsreq1.setEditable(false);
            exp1.setEditable(false);
            highqualify1.setEditable(false);
            applieddate.setEditable(false);
            message.setEditable(false);
            status1.setEditable(false);
            
            
            DefaultTableModel model = (DefaultTableModel)AP_jOBS_TABLE.getModel();
                int rows = model.getRowCount();
                if (rows >= 0){
                    for(int i = 0 ; i<rows ; i++){
                       model.removeRow(0);
                    } 
                    try{
                        Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                        String sql = "SELECT * FROM SHREY.JOBS, SHREY.REQUESTS "
                                + "WHERE SHREY.REQUESTS.JOB_ID = SHREY.JOBS.JOB_ID AND SHREY.REQUESTS.EMAIL_ID = '"+email+"'";
                        Statement stmt = con.createStatement();
                        ResultSet rs = stmt.executeQuery(sql);
                        while(rs.next()){
                            String appno1 = rs.getString("APPLICATION_ID");
                            String jobi = rs.getString("JOB_TITLE");
                            String compn = rs.getString("COMPANY_NAME");
                            String appdate = rs.getString("APPLIED_DATE");
                            String stat = rs.getString("STATUS");
                            model.addRow(new Object[]{appno1,jobi,compn,appdate,stat});
                        }
                        rs.close();
                        con.close();
                        stmt.close();
                    }
                    catch(SQLException e){
                        System.out.println(e.getMessage());
                    }
                }
    }//GEN-LAST:event_sp2_apjobsMouseClicked

    private void sp3_myprofileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sp3_myprofileMouseClicked
        KGradientPanel[] k= {sp1_highlight,sp2_highlight,sp4_highlight};
        sp.setFocus(sp3_highlight, k);
        
        
            home.setVisible(false);
            appliedJobs.setVisible(false);
            profile.setVisible(true);
            changePass.setVisible(false);
            
            
            try{
            gradY.setFont(new Font("Roboto Bk",Font.BOLD,15));
            Connection con = online_recruitment_system.Online_Recruitment_System.connect();
            String sql = "Select * from SHREY.USER_INFO where EMAIL_ID = '"+email+"'";
            Statement stmt1 = con.createStatement();
            ResultSet rs = stmt1.executeQuery(sql);
            if (rs.next()){
                status.setText(rs.getString("STATUS"));

                    Date d = new Date();
                    int pyear = d.getYear()+1900;
                    gradY.setEndYear(pyear);
                    gradY.setStartYear(pyear-30);
                    
                emailid.setText(email);
                fullname.setText(rs.getString("FULL_NAME"));
                mobileno.setText(rs.getString("MOBILE_NO"));
                gender.setSelectedItem(rs.getString("GENDER"));
                citycount.setText(rs.getString("CITY_COUNTRY"));
                gradY.setYear(rs.getInt("GRADUATION_YEAR"));
                qualify.setText(rs.getString("HIGHER_QUALIFICATION"));
                skills.setText(rs.getString("SKILLS"));
                industry.setText(rs.getString("INDUSTRY_WORKER"));
                int exp11 = rs.getInt("EXPERIENCE");
                int y = exp11/ 12;
                int m = exp11 % 12;
                expYear.setValue(y);
                expMonth.setValue(m);
                Date date1 = rs.getDate("D_O_B");
                dob.setDate(date1);
                new_resume_path=rs.getString("RESUME");
            }            
            emailid.setEditable(false);
            fullname.setEditable(false);
            mobileno.setEditable(false);
            gender.setEnabled(false);
            citycount.setEditable(false);
            gradY.setEnabled(false);
            qualify.setEditable(false);
            skills.setEditable(false);
            dob.setEnabled(false);
            status.setEditable(false);
            industry.setEditable(false);
            expYear.setEnabled(false);
            expMonth.setEnabled(false);
            edit_resume.setVisible(false);
            
            rs.close();
            con.close();
            stmt1.close();
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog (null,ex.getMessage());  
        }
    }//GEN-LAST:event_sp3_myprofileMouseClicked

    private void sp4_cpassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sp4_cpassMouseClicked
        KGradientPanel[] k= {sp2_highlight,sp3_highlight,sp1_highlight};
        sp.setFocus(sp4_highlight, k);
        
        
            home.setVisible(false);
            appliedJobs.setVisible(false);
            profile.setVisible(false);
            changePass.setVisible(true);
    }//GEN-LAST:event_sp4_cpassMouseClicked

    private void JOBS_AVAILMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JOBS_AVAILMouseClicked
        int i = JOBS_AVAIL.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)JOBS_AVAIL.getModel();
        String jobt = model.getValueAt(i,0).toString();
        String compn1 = model.getValueAt(i,1).toString();
        String skillsre = model.getValueAt(i,2).toString();

        try{
            Connection con = online_recruitment_system.Online_Recruitment_System.connect();
            String sql = "SELECT * FROM SHREY.JOBS,SHREY.COMPANIES WHERE SHREY.JOBS.JOB_TITLE = ? AND SHREY.COMPANIES.COMPANY_NAME = ? AND SHREY.JOBS.SKILLS = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,jobt);
            ps.setString(2,compn1);
            ps.setString(3,skillsre);
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                jobid.setText(rs.getString("JOB_ID"));
                jobtitle.setText(jobt);
                compname.setText(compn1);
                skillsreq.setText(skillsre);
                String ex = rs.getString("EXPERIENCE");
                exp.setText(ex);
                vacancy.setText(rs.getString("VACANCIES"));
                highqualify.setText(rs.getString("QUALIFICATION"));
            }
            rs.close();
            con.close();
            ps.close();
        }
        catch(SQLException e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_JOBS_AVAILMouseClicked

    private void jButton3HOMEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3HOMEMouseEntered
        if(evt.getSource() == jButton3){
            jButton3.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton5){
            jButton5.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton6){
            jButton6.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == aplly_job){
            aplly_job.setBackground(new Color(0,102,102));
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton3HOMEMouseEntered

    private void jButton3HOMEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3HOMEMouseExited
        if(evt.getSource() == jButton3){
            jButton3.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton5){
            jButton5.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton6){
            jButton6.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == aplly_job){
            aplly_job.setBackground(new Color(0,204,204));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3HOMEMouseExited

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jobid.setText("");
        jobtitle.setText("");
        compname.setText("");
        skillsreq.setText("");
        exp.setText("");
        vacancy.setText("");
        highqualify.setText("");

        String filtervalue = filterv.getText().toUpperCase();
        if(!filtervalue.isEmpty() && (jobtitleradio.isSelected() || compnameradio.isSelected() || skillsradio.isSelected())){
            String sql1 = "";
            if(jobtitleradio.isSelected()){
                sql1 = "Select * from SHREY.JOBS,SHREY.COMPANIES WHERE SHREY.JOBS.COMPANY_ID=SHREY.COMPANIES.COMPANY_ID AND  SHREY.JOBS.JOB_TITLE LIKE ? AND SHREY.JOBS.VACANCIES != 0";
            }else if(compnameradio.isSelected()){
                sql1 = "Select * from SHREY.JOBS,SHREY.COMPANIES WHERE SHREY.JOBS.COMPANY_ID=SHREY.COMPANIES.COMPANY_ID AND SHREY.COMPANIES.COMPANY_NAME LIKE ? AND SHREY.JOBS.VACANCIES != 0";
            }else if(skillsradio.isSelected()){
                sql1 = "Select * from SHREY.JOBS,SHREY.COMPANIES WHERE SHREY.JOBS.COMPANY_ID=SHREY.COMPANIES.COMPANY_ID AND SHREY.JOBS.SKILLS LIKE ? AND SHREY.JOBS.VACANCIES != 0";
            }

            DefaultTableModel model = (DefaultTableModel)JOBS_AVAIL.getModel();
            int rows = model.getRowCount();
            if (rows >= 0){
                for(int i = 0 ; i<rows ; i++){
                    model.removeRow(0);
                }
                try{
                    Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                    String sql = sql1;
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.setString(1,"%"+filtervalue+"%");
                    ResultSet rs = ps.executeQuery();
                    while(rs.next()){
                        String jobi = rs.getString("JOB_TITLE");
                        String compn = rs.getString("COMPANY_NAME");
                        String skillsr = rs.getString("SKILLS");
                        model.addRow(new Object[]{jobi,compn,skillsr});
                    }
                    int rows1 = model.getRowCount();
                    if(rows1 == 0){
                        JOptionPane.showMessageDialog(rootPane,"NO SUCH RECORD FOUND..! ");
                    }
                    rs.close();
                    con.close();
                    ps.close();
                }
                catch(SQLException e){
                    System.out.println(e.getMessage());
                }
            }
        }else{
            JOptionPane.showMessageDialog(rootPane,"NO Filter Value Entered..!");
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5HOMEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5HOMEMouseEntered
        if(evt.getSource() == jButton3){
            jButton3.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton5){
            jButton5.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton6){
            jButton6.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == aplly_job){
            aplly_job.setBackground(new Color(0,102,102));
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton5HOMEMouseEntered

    private void jButton5HOMEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5HOMEMouseExited
        if(evt.getSource() == jButton3){
            jButton3.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton5){
            jButton5.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton6){
            jButton6.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == aplly_job){
            aplly_job.setBackground(new Color(0,204,204));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5HOMEMouseExited

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        filterv.setText("");
        jobid.setText("");
        jobtitle.setText("");
        compname.setText("");
        skillsreq.setText("");
        exp.setText("");
        vacancy.setText("");
        highqualify.setText("");
        buttonGroup1.clearSelection();

        DefaultTableModel model = (DefaultTableModel)JOBS_AVAIL.getModel();
        int rows = model.getRowCount();
        if (rows >= 0){
            for(int i = 0 ; i<rows ; i++){
                model.removeRow(0);
            }
            try{
                Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                String sql = "Select * from SHREY.JOBS,SHREY.COMPANIES where SHREY.JOBS.COMPANY_ID = SHREY.COMPANIES.COMPANY_ID AND SHREY.JOBS.VACANCIES != 0";
                        Statement stmt = con.createStatement();
                        ResultSet rs = stmt.executeQuery(sql);
                        while(rs.next()){
                            String jobi = rs.getString("JOB_TITLE");
                            String compn=rs.getString("COMPANY_NAME");
                            String skillsr = rs.getString("SKILLS");
                            model.addRow(new Object[]{jobi,compn,skillsr});
                        }
                rs.close();
                con.close();
                stmt.close();
            }
            catch(SQLException e){
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6HOMEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6HOMEMouseEntered
        if(evt.getSource() == jButton3){
            jButton3.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton5){
            jButton5.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton6){
            jButton6.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == aplly_job){
            aplly_job.setBackground(new Color(0,102,102));
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton6HOMEMouseEntered

    private void jButton6HOMEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6HOMEMouseExited
        if(evt.getSource() == jButton3){
            jButton3.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton5){
            jButton5.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton6){
            jButton6.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == aplly_job){
            aplly_job.setBackground(new Color(0,204,204));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6HOMEMouseExited

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        filterv.setText("");
        jobid.setText("");
        jobtitle.setText("");
        compname.setText("");
        skillsreq.setText("");
        exp.setText("");
        vacancy.setText("");
        highqualify.setText("");
        buttonGroup1.clearSelection();

        DefaultTableModel model = (DefaultTableModel)JOBS_AVAIL.getModel();
        int rows = model.getRowCount();
        if (rows>0){
            for(int i = 0 ; i<rows ; i++){
                model.removeRow(0);
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void aplly_jobHOMEMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aplly_jobHOMEMouseEntered
        if(evt.getSource() == jButton3){
            jButton3.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton5){
            jButton5.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton6){
            jButton6.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == aplly_job){
            aplly_job.setBackground(new Color(0,102,102));
        }// TODO add your handling code here:
    }//GEN-LAST:event_aplly_jobHOMEMouseEntered

    private void aplly_jobHOMEMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aplly_jobHOMEMouseExited
        if(evt.getSource() == jButton3){
            jButton3.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton5){
            jButton5.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton6){
            jButton6.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == aplly_job){
            aplly_job.setBackground(new Color(0,204,204));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_aplly_jobHOMEMouseExited

    private void aplly_jobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplly_jobActionPerformed
        String jobi1 = jobid.getText();
        String date11 = dateset.getText();
        String time11 = timeset.getText();
        String appdate = date11 + "  " + time11;
        int count=0;
        if(jobi1.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Please select the Jobs Form the TABLE first..!!");
        }else{
            try{
                Connection con = online_recruitment_system.Online_Recruitment_System.connect();
        String sql2 = "SELECT * FROM SHREY.REQUESTS WHERE JOB_ID = '"+jobi1+"' AND EMAIL_ID = '"+email+"'";
        String sql = "SELECT APPLICATION_ID FROM SHREY.REQUESTS";
        String sq1l = "INSERT INTO SHREY.REQUESTS(APPLICATION_ID,EMAIL_ID, JOB_ID,JOB_TITLE,COMPANY_ID,COMPANY_NAME, APPLIED_DATE) VALUES(?,?,?,?,?,?,?)";
        String sql3 = "SELECT * FROM SHREY.COMPANIES,SHREY.JOBS WHERE SHREY.JOBS.JOB_ID = '"+jobi1+"' AND SHREY.COMPANIES.COMPANY_ID=SHREY.JOBS.COMPANY_ID";
        Statement stmt = con.createStatement();
        ResultSet rs2 = stmt.executeQuery(sql3);
        String jobtitle=null,companyid=null,companyname=null;
        if(rs2.next())
        {jobtitle=rs2.getString("JOB_TITLE");
        companyid=rs2.getString("COMPANY_ID");
        companyname=rs2.getString("COMPANY_NAME");}
        rs2.close();
        ResultSet rs1 = stmt.executeQuery(sql2);
        if(rs1.next()){
            String app = rs1.getString("APPLICATION_ID");
            JOptionPane.showMessageDialog(rootPane, "Already Applied For This Job whose:  \n   APPLICATION_ID -  "+ app);
            rs1.close();           
        }
        else{
            ResultSet rs0 = stmt.executeQuery(sql);
            List<Integer> appn = new ArrayList<>();
            while (rs0.next()) {
                String ap = rs0.getString("APPLICATION_ID");
                appn.add(Integer.parseInt(rs0.getString("APPLICATION_ID").substring(5,ap.length())));          
            }rs0.close();
            count = Collections.max(appn);
            PreparedStatement ps = con.prepareStatement(sq1l);
            String appno1 = "APPID" + Integer.toString(count + 1);
            ps.setString(1, appno1);
            ps.setString(2, email);
            ps.setString(3, jobi1);
            ps.setString(4, jobtitle);
            ps.setString(5, companyid);
            ps.setString(6, companyname);
            ps.setString(7, appdate);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(rootPane, "Successfully Applied for this JOB..\n\n  APPLICATION ID - " + appno1);
            
            String mail="Your job Application had been Submitted!!!\nPlease wait for the status to be updated and for any further communication.";
            try{
                send_mail.sendmail(email,mail);
            }catch(Exception e){ System.out.println(e);}
            
            con.close();
            stmt.close();
            ps.close();
            
                }
            }
            catch(SQLException e){
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_aplly_jobActionPerformed

    private void AP_jOBS_TABLEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AP_jOBS_TABLEMouseClicked
        int i = AP_jOBS_TABLE.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)AP_jOBS_TABLE.getModel();
        String appno1 = model.getValueAt(i,0).toString();
        String jobt1 = model.getValueAt(i,1).toString();
        String compn1 = model.getValueAt(i,2).toString();

        try{
            Connection con = online_recruitment_system.Online_Recruitment_System.connect();
            String sql = "Select * from SHREY.JOBS, SHREY.REQUESTS,SHREY.COMPANIES"
                        + " WHERE SHREY.REQUESTS.JOB_ID = SHREY.JOBS.JOB_ID AND SHREY.COMPANIES.COMPANY_ID = SHREY.JOBS.COMPANY_ID AND SHREY.REQUESTS.EMAIL_ID =  ?"
                        + " AND SHREY.REQUESTS.APPLICATION_ID = ? AND SHREY.JOBS.JOB_TITLE = ? "
                        + " AND SHREY.COMPANIES.COMPANY_NAME = ?";        
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setString(1,email);
        ps.setString(2,appno1);
        ps.setString(3,jobt1);
        ps.setString(4,compn1);
        ResultSet rs = ps.executeQuery();
        if(rs.next()){
            appno.setText(rs.getString("APPLICATION_ID"));
            jobid1.setText(rs.getString("JOB_ID"));
            jobtitle1.setText(jobt1);
            compname1.setText(compn1);
            skillsreq1.setText(rs.getString("SKILLS"));
            
            exp1.setText(rs.getString("EXPERIENCE"));
            highqualify1.setText(rs.getString("QUALIFICATION"));
            applieddate.setText(rs.getString("APPLIED_DATE"));
            status1.setText(rs.getString("STATUS"));
            message.setText(rs.getString("MESSAGE"));
        }
        rs.close();
        con.close();
        ps.close();
        }
        catch(SQLException e){
            System.out.println(e.getMessage());
        }    // TODO add your handling code here:
    }//GEN-LAST:event_AP_jOBS_TABLEMouseClicked

    private void jButton8appjobsmouseenter(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8appjobsmouseenter
        if(evt.getSource() == jButton8){
            jButton8.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton9){
            jButton9.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton10){
            jButton10.setBackground(new Color(0,102,102));
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton8appjobsmouseenter

    private void jButton8appjobmouseexit(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8appjobmouseexit
        if(evt.getSource() == jButton8){
            jButton8.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton9){
            jButton9.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton10){
            jButton10.setBackground(new Color(0,204,204));
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton8appjobmouseexit

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        appno.setText("");
        jobid1.setText("");
        jobtitle1.setText("");
        compname1.setText("");
        skillsreq1.setText("");
        exp1.setText("");
        highqualify1.setText("");
        applieddate.setText("");
        message.setText("");
        status1.setText("");

        String filtervalue = filterv1.getText().toUpperCase();
        if(!filtervalue.isEmpty() && (jobtitle1radio.isSelected() || statradio.isSelected() || appnoradio.isSelected() || applieddateradio.isSelected())){
            String sql1 = "";
            if(jobtitle1radio.isSelected()){
                sql1 = "Select * from SHREY.JOBS, SHREY.REQUESTS"
                        + " WHERE SHREY.REQUESTS.JOB_ID = SHREY.JOBS.JOB_ID AND SHREY.REQUESTS.EMAIL_ID = ?"
                        + " AND SHREY.REQUESTS.JOB_TITLE LIKE ?";
            }else if(statradio.isSelected()){
                sql1 = "Select * from SHREY.JOBS, SHREY.REQUESTS "
                        + " WHERE SHREY.REQUESTS.JOB_ID = SHREY.JOBS.JOB_ID AND SHREY.REQUESTS.EMAIL_ID = ?"
                        + " AND SHREY.REQUESTS.STATUS LIKE ?";
            }else if(appnoradio.isSelected()){
                sql1 = "Select * from SHREY.JOBS, SHREY.REQUESTS "
                        + " WHERE SHREY.REQUESTS.JOB_ID = SHREY.JOBS.JOB_ID AND SHREY.REQUESTS.EMAIL_ID = ?"
                        + " AND SHREY.REQUESTS.APPLICATION_ID LIKE ?";
            }else if(applieddateradio.isSelected()){
                sql1 = "Select * from SHREY.JOBS, SHREY.REQUESTS "
                        + " WHERE SHREY.REQUESTS.JOB_ID = SHREY.JOBS.JOB_ID AND SHREY.REQUESTS.EMAIL_ID = ?"
                        + " AND SHREY.REQUESTS.APPLIED_DATE LIKE ?";
            }

            DefaultTableModel model = (DefaultTableModel)AP_jOBS_TABLE.getModel();
            int rows = model.getRowCount();
            if (rows >= 0){
                for(int i = 0 ; i<rows ; i++){
                    model.removeRow(0);
                }
                try{
                    Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                    String sql = sql1;
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.setString(1,email);
                    ps.setString(2,"%"+filtervalue+"%");
                    ResultSet rs = ps.executeQuery();
                    while(rs.next()){
                        String appno1 = rs.getString("APPLICATION_ID");
                        String jobi = rs.getString("JOB_TITLE");
                        String compn = rs.getString("COMPANY_NAME");
                        String appdate = rs.getString("APPLIED_DATE");
                        String stat = rs.getString("STATUS");
                        model.addRow(new Object[]{appno1, jobi, compn, appdate, stat});
                    }
                    int rows1 = model.getRowCount();
                    if(rows1 == 0){
                        JOptionPane.showMessageDialog(rootPane,"NO SUCH RECORD FOUND..! ");
                    }
                    rs.close();
                    con.close();
                    ps.close();
                }
                catch(SQLException e){
                    System.out.println(e.getMessage());
                }
            }
        }else{
            JOptionPane.showMessageDialog(rootPane,"NO Filter Value Entered..!");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9appjobsmouseenter(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9appjobsmouseenter
        if(evt.getSource() == jButton8){
            jButton8.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton9){
            jButton9.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton10){
            jButton10.setBackground(new Color(0,102,102));
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton9appjobsmouseenter

    private void jButton9appjobmouseexit(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9appjobmouseexit
        if(evt.getSource() == jButton8){
            jButton8.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton9){
            jButton9.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton10){
            jButton10.setBackground(new Color(0,204,204));
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton9appjobmouseexit

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        filterv1.setText("");
        appno.setText("");
        jobid1.setText("");
        jobtitle1.setText("");
        compname1.setText("");
        skillsreq1.setText("");
        exp1.setText("");
        highqualify1.setText("");
        applieddate.setText("");
        message.setText("");
        status1.setText("");
        buttonGroup1.clearSelection();

        DefaultTableModel model = (DefaultTableModel) AP_jOBS_TABLE.getModel();
        int rows = model.getRowCount();
        if (rows >= 0) {
            for (int i = 0; i < rows; i++) {
                model.removeRow(0);
            }
            try {
                Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                String sql = "Select * from SHREY.JOBS, SHREY.REQUESTS "
                        + "WHERE SHREY.REQUESTS.JOB_ID = SHREY.JOBS.JOB_ID AND SHREY.REQUESTS.EMAIL_ID = '" + email + "'";
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    String appno1 = rs.getString("APPLICATION_ID");
                    String jobi = rs.getString("JOB_TITLE");
                    String compn = rs.getString("COMPANY_NAME");
                    String appdate = rs.getString("APPLIED_DATE");
                    String stat = rs.getString("STATUS");
                    model.addRow(new Object[]{appno1, jobi, compn, appdate, stat});
                }
                rs.close();
                con.close();
                stmt.close();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10appjobsmouseenter(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10appjobsmouseenter
        if(evt.getSource() == jButton8){
            jButton8.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton9){
            jButton9.setBackground(new Color(0,102,102));
        }
        if(evt.getSource() == jButton10){
            jButton10.setBackground(new Color(0,102,102));
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton10appjobsmouseenter

    private void jButton10appjobmouseexit(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10appjobmouseexit
        if(evt.getSource() == jButton8){
            jButton8.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton9){
            jButton9.setBackground(new Color(0,204,204));
        }
        if(evt.getSource() == jButton10){
            jButton10.setBackground(new Color(0,204,204));
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton10appjobmouseexit

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        filterv1.setText("");
        appno.setText("");
        jobid1.setText("");
        jobtitle1.setText("");
        compname1.setText("");
        skillsreq1.setText("");
        exp1.setText("");
        highqualify1.setText("");
        applieddate.setText("");
        message.setText("");
        status1.setText("");
        buttonGroup2.clearSelection();
        DefaultTableModel model = (DefaultTableModel)AP_jOBS_TABLE.getModel();
        int rows = model.getRowCount();
        if (rows>0){
            for(int i = 0 ; i<rows ; i++){
                model.removeRow(0);
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void mobilenoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_mobilenoCaretUpdate
        char [] num = new char []{'1','2','3','4','5','6','7','8','9','0'};
        String mobno = mobileno.getText();
        int l = mobno.length();
        int count = 0;
        for (int i = 0 ; i<l ; i++){
            for (int j = 0 ; j<10 ; j++){
                if(mobno.charAt(i) == num[j]){
                    count += 1;
                    break;
                }
            }
        }
        if (l==10 && count == 10){
            mobver.setText("Valid MobileNo..");
        }
        else{
            mobver.setText("In-Valid MobileNo..");
        }
    }//GEN-LAST:event_mobilenoCaretUpdate

    private void paneCommonEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paneCommonEvent
        if (evt.getSource()==sp1_home){
            sp.cChange(sp1_home);
        }
        else{
            if (evt.getSource()==sp2_apjobs){
            sp.cChange(sp2_apjobs);
        }
            else{
                if (evt.getSource()==sp3_myprofile){
                sp.cChange(sp3_myprofile);
                }
                else{
                    if (evt.getSource()==sp4_cpass){
                    sp.cChange(sp4_cpass);
                    }                
                }           
            }
        }
    }//GEN-LAST:event_paneCommonEvent

    private void paneCommomExitEvent(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paneCommomExitEvent
        if (evt.getSource()==sp1_home){
            sp.cReset(sp1_home);
        }
        else{
            if (evt.getSource()==sp2_apjobs){
                sp.cReset(sp2_apjobs);
        }
            else{
                if (evt.getSource()==sp3_myprofile){
                    sp.cReset(sp3_myprofile);
                }
                else{
                    if (evt.getSource()==sp4_cpass){
                        sp.cReset(sp4_cpass);
                    }                
                }           
            }
        }
    }//GEN-LAST:event_paneCommomExitEvent

    private void RESETMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RESETMouseClicked
        String oldpasswrd1 = oldpasswrd.getText();
        String newpasswrd1 = newpasswrd.getText();
        String confpasswrd = confnewpasswrd.getText();

        if (oldpasswrd1.isEmpty() || newpasswrd1.isEmpty() || confpasswrd.isEmpty()){
            JOptionPane.showMessageDialog(this,"Details are not complete..\nFields cannot be Empty..");
        }
        else{
            try{

                Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                String sql = "Select PASSWORD from SHREY.USER_LOGIN where EMAIL_ID = '"+email+"'";
                Statement stmt = con.createStatement();
                ResultSet rs1 = stmt.executeQuery(sql);
                if (rs1.next()){
                    
                    oldpasswrd1=Hashing.hashPassword(oldpasswrd1);
                    
                    if(oldpasswrd1.equals(rs1.getString("PASSWORD"))){
                        if(newpasswrd1.equals(confpasswrd)){
                            
                            newpasswrd1=Hashing.hashPassword(newpasswrd1);
                            
                            String sql1 = "Update SHREY.USER_LOGIN set "
                            + "PASSWORD = '"+newpasswrd1+"' where EMAIL_ID = '"+email+"'";
                            stmt.executeUpdate(sql1);
                            JOptionPane.showMessageDialog(rootPane,"PASSWORD Updated...");
                            newpasswrd.setText("");
                            confnewpasswrd.setText("");
                            oldpasswrd.setText("");
                        }else{
                            JOptionPane.showMessageDialog(rootPane,"New Password Do not Match..");
                            newpasswrd.setText("");
                            confnewpasswrd.setText("");
                        }
                    }else{
                        JOptionPane.showMessageDialog(rootPane,"Old Password Do not Match..");
                        oldpasswrd.setText("");
                    }
                }rs1.close();
                con.close();
                stmt.close();
            }catch(SQLException e){
                System.out.print(e.getMessage());
            } catch (NoSuchAlgorithmException ex) {
                 System.out.println(ex.getMessage());
            }

        }
    }//GEN-LAST:event_RESETMouseClicked

    private void logOutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutLabelMouseClicked
        dispose();
        new Login_Page().setVisible(true);
    }//GEN-LAST:event_logOutLabelMouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        fullname.setEditable(true);
        mobileno.setEditable(true);
        gender.setEnabled(true);
        citycount.setEditable(true);
        gradY.setEnabled(true);
        qualify.setEditable(true);
        skills.setEditable(true);
        dob.setEnabled(true);
        expYear.setEnabled(true);
        expMonth.setEnabled(true);
        edit_resume.setVisible(true);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
            try{
            String stat = status.getText();
            String email1 = emailid.getText();
            String fname1 = fullname.getText();

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date1 = sdf.format(dob.getDate());
            int year_dob = dob.getDate().getYear()+1900;

            String Mobileno1 = mobileno.getText();
            String gender1 = gender.getSelectedItem().toString();
            String citycount1 = citycount.getText();
            String gradYear1 = Integer.toString(gradY.getYear());
            String highqualify11 = qualify.getText();
            String skill1 = skills.getText();
            String indust1 = industry.getText();
            String expY = expYear.getValue().toString();
            String expM = expMonth.getValue().toString();
            if(!fname1.isEmpty() && !Mobileno1.isEmpty() && !citycount1.isEmpty() && !gradYear1.isEmpty() && !highqualify11.isEmpty() && !skill1.isEmpty() && !indust1.isEmpty() && !expY.isEmpty() && !expM.isEmpty()){
                if((gradY.getYear()-year_dob) <= 15){
                    JOptionPane.showMessageDialog(this,"Error : \n" + "  DOB = "+date1+", \n  Graduation Year = "+gradYear1 + " \nHow ?");
                }else if(!mobver.getText().equals("Valid MobileNo..")){
                    JOptionPane.showMessageDialog(this,"Error in MOBILE NO..");
                }
                else{
                    int Y = Integer.parseInt(expY)*12;
                    int M = Integer.parseInt(expM);
                    int experience = Y+M;
                    PreparedStatement stmt;
                    int gradYear2 = Integer.parseInt(gradYear1);
                    try{
                        Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                        String sql = "Update SHREY.USER_INFO Set "
                            + " STATUS = ? ,EMAIL_ID = ? ,FULL_NAME = ? ,D_O_B = ? ,MOBILE_NO = ? ,GENDER = ?,"
                            + " CITY_COUNTRY = ?,GRADUATION_YEAR = ?,INDUSTRY_WORKEr = ?,HIGHER_QUALIFICATION = ?,SKILLS = ?,EXPERIENCE = ? , RESUME = ?"
                            + " where EMAIL_ID = ?";

                    stmt = con.prepareStatement(sql);
                    stmt.setString(1, stat);
                    stmt.setString(2, email1);
                    stmt.setString(3,fname1);
                    stmt.setString(4, date1);
                    stmt.setString(5, Mobileno1);
                    stmt.setString(6,gender1);
                    stmt.setString(7, citycount1);
                    stmt.setInt(8, gradYear2);
                    stmt.setString(9, indust1);
                    stmt.setString(10, highqualify11);
                    stmt.setString(11, skill1);
                    stmt.setInt(12, experience);
                    stmt.setString(13,new_resume_path);
                    stmt.setString(14, email);

                    stmt.executeUpdate();
                    JOptionPane.showMessageDialog(this,"User Profile Updated Successfully..!");
                    emailid.setEditable(false);
                    fullname.setEditable(false);
                    mobileno.setEditable(false);
                    gender.setEnabled(false);
                    citycount.setEditable(false);
                    gradY.setEnabled(false);
                    qualify.setEditable(false);
                    skills.setEditable(false);
                    dob.setEnabled(false);
                    status.setEditable(false);
                    industry.setEditable(false);
                    expYear.setEnabled(false);
                    expMonth.setEnabled(false);
                    edit_resume.setVisible(false);
                    con.close();
                    stmt.close();
                }
                    catch(SQLException ex){
                        JOptionPane.showMessageDialog (null,ex.getMessage());
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this,"Details are not complete..\nFields cannot be Empty..");
            }
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(this,"Details are not complete..\nFields cannot be Empty..");
        }
    }//GEN-LAST:event_jLabel6MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
jScrollPane4.getVerticalScrollBar().setUnitIncrement(30);
jScrollPane8.getVerticalScrollBar().setUnitIncrement(30); 
        
        Date d = new Date();
        int pyear = d.getYear()+1900;
        gradY.setEndYear(pyear);
        gradY.setStartYear(pyear-30);
        Date pre = new Date();
        String year = Integer.toString(pre.getYear()+1900-18);
        String month = Integer.toString(pre.getMonth()+1);
        String dat = Integer.toString(pre.getDate());
        String maxdate = year+"-"+month+"-"+dat;
        try {
            Date datemax = new SimpleDateFormat("yyyy-MM-dd").parse(maxdate);
            dob.setMaxSelectableDate(datemax);
        } catch (ParseException ex) {
            System.out.print(ex.getMessage());
        }
            
            jobid.setEditable(false);
            jobtitle.setEditable(false);
            compname.setEditable(false);
            skillsreq.setEditable(false);
            exp.setEditable(false);
            highqualify.setEditable(false);
            vacancy.setEditable(false);
            
            DefaultTableModel model = (DefaultTableModel)JOBS_AVAIL.getModel();
            try{
                Connection con = online_recruitment_system.Online_Recruitment_System.connect();
                String sql = "Select * from SHREY.JOBS,SHREY.COMPANIES where SHREY.JOBS.COMPANY_ID = SHREY.COMPANIES.COMPANY_ID AND SHREY.JOBS.VACANCIES != 0";
                        Statement stmt = con.createStatement();
                        ResultSet rs = stmt.executeQuery(sql);
                        while(rs.next()){
                            String jobi = rs.getString("JOB_TITLE");
                            String compn=rs.getString("COMPANY_NAME");
                            String skillsr = rs.getString("SKILLS");
                            model.addRow(new Object[]{jobi,compn,skillsr});
                        }
                rs.close();
                con.close();
                stmt.close();
            }
            catch(SQLException e){
                System.out.println(e.getMessage());
            }        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void confnewpasswrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confnewpasswrdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confnewpasswrdActionPerformed

    private void newpasswrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newpasswrdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newpasswrdActionPerformed

    private void oldpasswrdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldpasswrdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oldpasswrdActionPerformed

    private void newpasswrdCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_newpasswrdCaretUpdate
        String pass = newpasswrd.getText();
        String confpass = confnewpasswrd.getText();
        if (pass.equals(confpass)) {
            passver.setForeground(Color.green);
            passver.setText("Password Match..");
        }
        else {
            passver.setForeground(Color.red);
            passver.setText("Password Not Match..");
        }
        char [] alphaU = new char[]{'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'Z', 'Y', 'X', 'W', 'V', 'U', 'T', 'S', 'R', 'Q', 'P', 'O', 'N'};
        char [] alphaL = new char[]{'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'z', 'y', 'x', 'w', 'v', 'u', 't', 's', 'r', 'q', 'p', 'o', 'n'};
        char [] digit = new char[]{'1','2','3','4','5','6','7','8','9','0'};
        char [] special = new char[]{'!','@','#','$','%','^','&','*','(',')','-','+','=',' ','/','.',',','?','_'};
        int l = pass.length();

        boolean a = true;
        boolean b = true;
        boolean c = true;
        boolean d = true;
        int count = 0;
        if(l>=8){
            count ++;
        }
        for( int i = 0 ; i<l ; i++){
            for (int j = 0 ; j<26 ; j++){
                if ((pass.charAt(i) == alphaU[j]) && (a == true)){
                    count += 1;
                    a = false;
                }
                else if ((pass.charAt(i) == alphaL[j]) && (b == true)){
                    count += 1;
                    b = false;
                }
            }
            for (int k = 0 ; k<10 ; k++){
                if ((pass.charAt(i) == digit[k]) && (c == true)){
                    count += 1;
                    c = false;
                }
            }
            for (int m = 0 ; m<19 ; m++){
                if ((pass.charAt(i) == special[m]) && (d == true)){
                    count += 1;
                    d = false;
                }
            }
        }
        if (count == 3 || count == 4){
            passStrength.setForeground(Color.blue);
            passStrength.setText("Moderate Password");
        }else if (count == 5){
            passStrength.setForeground(Color.green);
            passStrength.setText("Strong Password");
        }else{
            passStrength.setForeground(Color.red);
            passStrength.setText("Weak Password");
        }
    }//GEN-LAST:event_newpasswrdCaretUpdate

    private void confnewpasswrdCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_confnewpasswrdCaretUpdate
        String pass = newpasswrd.getText();
        String confpass = confnewpasswrd.getText();
        if (pass.equals(confpass)) {
            passver.setText("Password Match..");
            passver.setForeground(Color.green);
        }
        else {
            passver.setText("Password Not Match..");
            passver.setForeground(Color.red);
        }
    }//GEN-LAST:event_confnewpasswrdCaretUpdate

    private void show_resumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_resumeActionPerformed
           String qy="SELECT * FROM SHREY.USER_INFO WHERE EMAIL_ID='"+email+"'";
        
        try{
            ResultSet rs=Connect.connect(qy);
            if (rs.next()){
            String filepat = rs.getString("RESUME");
            Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+ filepat);
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog (null,e.getMessage());  
        }
    }//GEN-LAST:event_show_resumeActionPerformed

    private void edit_resumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_resumeActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        new_resume_path = f.getAbsolutePath();
    }//GEN-LAST:event_edit_resumeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(USER_PORTAL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(USER_PORTAL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(USER_PORTAL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(USER_PORTAL.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new USER_PORTAL().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AP_jOBS_TABLE;
    private javax.swing.JTable JOBS_AVAIL;
    private javax.swing.JLabel RESET;
    private javax.swing.JButton aplly_job;
    private javax.swing.JPanel appliedJobs;
    private javax.swing.JTextField applieddate;
    private javax.swing.JRadioButton applieddateradio;
    private javax.swing.JTextField appno;
    private javax.swing.JRadioButton appnoradio;
    private javax.swing.JLabel background;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel changePass;
    private javax.swing.JTextField citycount;
    private javax.swing.JTextField compname;
    private javax.swing.JTextField compname1;
    private javax.swing.JRadioButton compnameradio;
    private javax.swing.JPasswordField confnewpasswrd;
    private javax.swing.JLabel dashboardlabel;
    private javax.swing.JLabel dateset;
    private com.toedter.calendar.JDateChooser dob;
    private keeptoo.KButton edit_resume;
    private javax.swing.JTextField emailid;
    private javax.swing.JTextField exp;
    private javax.swing.JTextField exp1;
    private javax.swing.JSpinner expMonth;
    private javax.swing.JSpinner expYear;
    private javax.swing.JTextField filterv;
    private javax.swing.JTextField filterv1;
    private javax.swing.JPanel frame_container;
    private javax.swing.JTextField fullname;
    private javax.swing.JComboBox<String> gender;
    private com.toedter.calendar.JYearChooser gradY;
    private javax.swing.JLabel head;
    private javax.swing.JTextField highqualify;
    private javax.swing.JTextField highqualify1;
    private javax.swing.JPanel home;
    private javax.swing.JTextField industry;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jobid;
    private javax.swing.JTextField jobid1;
    private javax.swing.JTextField jobtitle;
    private javax.swing.JTextField jobtitle1;
    private javax.swing.JRadioButton jobtitle1radio;
    private javax.swing.JRadioButton jobtitleradio;
    private keeptoo.KGradientPanel kGradientPanel1;
    private javax.swing.JLabel logOutLabel;
    private javax.swing.JTextArea message;
    private javax.swing.JTextField mobileno;
    private javax.swing.JLabel mobver;
    private javax.swing.JPasswordField newpasswrd;
    private javax.swing.JPasswordField oldpasswrd;
    private javax.swing.JPanel other_inf;
    private javax.swing.JLabel passStrength;
    private javax.swing.JLabel passver;
    private javax.swing.JPanel per_inf;
    private javax.swing.JPanel profile;
    private javax.swing.JLabel profilebackground;
    private javax.swing.JTextField qualify;
    private keeptoo.KButton show_resume;
    private javax.swing.JPanel side_pane;
    private javax.swing.JTextArea skills;
    private javax.swing.JRadioButton skillsradio;
    private javax.swing.JTextArea skillsreq;
    private javax.swing.JTextArea skillsreq1;
    private keeptoo.KGradientPanel sp1_highlight;
    private javax.swing.JLabel sp1_home;
    private javax.swing.JLabel sp2_apjobs;
    private keeptoo.KGradientPanel sp2_highlight;
    private keeptoo.KGradientPanel sp3_highlight;
    private javax.swing.JLabel sp3_myprofile;
    private javax.swing.JLabel sp4_cpass;
    private keeptoo.KGradientPanel sp4_highlight;
    private javax.swing.JRadioButton statradio;
    private javax.swing.JTextField status;
    private javax.swing.JTextField status1;
    private javax.swing.JLabel timeset;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField vacancy;
    // End of variables declaration//GEN-END:variables
}
